#include <iostream>
#include <unordered_map>

/*Anagrams: act/cat, tan/ant, tar/rat, ode/doe, low/owl, lee/eel, tab/bat, god/dog, wee/ewe.*/

bool isAnagram(std::string s1, std::string s2)
{
    //1. check if length of given strings are equal if not return false
    if(s1.length() != s2.length())
        return false;
    
    std::unordered_map<char, int> uMap; //un_ordered map<char, int>
    for (int i = 0; i < s1.length(); i++) {
        uMap[s1[i]]++;  //stores the count of each char in s1 string
    }
    
    //2. loop through uMap to match the characters in string s2
    for (int i = 0; i < s2.length(); i++) {
        if(uMap.find(s2[i]) != uMap.end()) //if found decrement the count to 0
            uMap[s2[i]]--;
        else
            return false;
    }
    
    //3. check for each object if key is not zero
    for (auto i : uMap) {
        if(i.second != 0)
            return false;
    }
    return true;
}

int main()
{
    std::string s1 = "stop";
    std::string s2 = "pots";
    bool result = isAnagram(s1, s2);
    result ? std::cout << "Given strings are anagram" : std::cout << "Given strings are not anagram";

    return 0;
}